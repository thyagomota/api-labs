# generated by fastapi-codegen:
#   filename:  quotes.yaml
#   timestamp: 2022-05-26T20:18:18+00:00

from __future__ import annotations

from typing import Union

from fastapi import FastAPI

from .models import Quote

from fastapi import Response
from typing import Optional, List

from .controller import Controller

app = FastAPI(
    title='Quotes API',
    version='1.0',
)


# @app.get('/quotes/{id}', response_model=Quote, responses={'404': {'model': str}})
# def get_quotes_id(id: int) -> Union[Quote, str]:
#     """
#     Returns a quote given its id; for a random quote use id=0
#     """
#     pass

@app.get('/quotes/{id}', response_model=dict)
def get_quotes_id(id: int, key: str, response: Response) -> Quote:
    """
    Returns a quote given its id; for a random quote use id=0
    """
    if Controller.is_authenticated(key):
        quote = Controller.get_quotes_id(id)
        print(quote)
        if quote:
            response.status_code = 200
            return quote.__dict__
        else:
            response.status_code = 404
            return {'message': 'Not Found!'}
    else:
        response.status_code = 401
        return {'message': 'Unauthorized!'}

@app.get('/quotes')
def get_quotes(
    key: str, 
    response: Response,
    text: Optional[str] = None,
    author: Optional[str] = None,
    category: Optional[str] = None,
    tag: Optional[str] = None,
    popularity: Optional[float] = None, 
    offset: Optional[int] = 0, 
    limit: Optional[int] = 10):
    """
    Returns a list of quotes that satisfy a search criteria
    """
    if Controller.is_authenticated(key):
        quotes = Controller.get_quotes(text, author, category, tag, popularity, offset=offset, limit=limit)
        if quotes:
            response.status_code = 200
        else:
            response.status_code = 404
        return quotes
    else:
        response.status_code = 401
        return {'message': 'Unauthorized!'}