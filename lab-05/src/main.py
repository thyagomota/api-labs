# generated by fastapi-codegen:
#   filename:  quotes.yaml
#   timestamp: 2022-05-09T16:14:15+00:00

from __future__ import annotations

from typing import Optional, Union

from fastapi import FastAPI

# NOTE: following import statement has been commented out
# from .models import (
#     QuotesGetResponse,
#     QuotesGetResponse1,
#     QuotesGetResponse2,
#     QuotesIdGetResponse,
#     QuotesIdGetResponse1,
#     QuotesIdGetResponse2,
# )

# NOTE: following import statement has been added
from .controller import Controller

app = FastAPI(
    title='Quotes API',
    version='1.0',
)

# NOTE: following method has been modified
@app.get('/quotes')
def get_quotes(text=None, author=None, category=None, tag=None, popularity=None, offset=0, limit=10, key=None):
    if Controller.is_authenticated(key):
        result = Controller.get_quote(text=text, author=author, category=category, tag=tag, popularity=popularity, offset=offset, limit=limit)
        if result:
            quotes = []
            for quote in result: 
                quotes.append(quote.toJSON())
            if len(quotes) > 0:
                return {
                    'statusCode': 200, 
                    'Content-Type': 'application/json',
                    'body': {
                        'quotes': quotes, 
                    }
                }
        return {
            'statusCode': 404, 
            'Content-Type': 'application/json',
            'body': 'Not Found'
        } 
    else: 
        return {
            'statusCode': 401, 
            'Content-Type': 'application/json',
            'body': 'Unauthorized'
        } 

# NOTE: following method has been modified
@app.get('/quotes/{id}')
def get_quotes_id(id: int, text=None, author=None, category=None, tag=None, popularity=None, key=None):
    if Controller.is_authenticated(key):
        quote = Controller.get_quote(id, text=text, author=author, category=category, tag=tag, popularity=popularity)
        if quote:
            return {
                'statusCode': 200, 
                'Content-Type': 'application/json',
                'body': {
                    'quote': quote.toJSON(), 
                }
            } 
        else:
            return {
                'statusCode': 404, 
                'Content-Type': 'application/json',
                'body': 'Not Found'
            }  
    else: 
        return {
            'statusCode': 401, 
            'Content-Type': 'application/json',
            'body': 'Unauthorized'
        } 
